/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE GIMBAL_MANAGER_STATUS PACKING
package com.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Current status about a high level gimbal manager. This message should be broadcast at a low regular rate (e.g. 5Hz).
*/
public class msg_gimbal_manager_status extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_GIMBAL_MANAGER_STATUS = 281;
    public static final int MAVLINK_MSG_LENGTH = 9;
    private static final long serialVersionUID = MAVLINK_MSG_ID_GIMBAL_MANAGER_STATUS;


      
    /**
    * Timestamp (time since system boot).
    */
    public long time_boot_ms;
      
    /**
    * High level gimbal manager flags currently applied.
    */
    public long flags;
      
    /**
    * Gimbal device ID that this gimbal manager is responsible for.
    */
    public short gimbal_device_id;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_GIMBAL_MANAGER_STATUS;
              
        packet.payload.putUnsignedInt(time_boot_ms);
              
        packet.payload.putUnsignedInt(flags);
              
        packet.payload.putUnsignedByte(gimbal_device_id);
        
        return packet;
    }

    /**
    * Decode a gimbal_manager_status message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time_boot_ms = payload.getUnsignedInt();
              
        this.flags = payload.getUnsignedInt();
              
        this.gimbal_device_id = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_gimbal_manager_status(){
        msgid = MAVLINK_MSG_ID_GIMBAL_MANAGER_STATUS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_gimbal_manager_status(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_GIMBAL_MANAGER_STATUS;
        unpack(mavLinkPacket.payload);        
    }

          
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_GIMBAL_MANAGER_STATUS - sysid:"+sysid+" compid:"+compid+" time_boot_ms:"+time_boot_ms+" flags:"+flags+" gimbal_device_id:"+gimbal_device_id+"";
    }
}
        